Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o (exit)

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .text          0x00000000        0x0 motor.o
 .bss           0x00000000        0x0 motor.o
 .text          0x00000000        0x0 usart.o
 .bss           0x00000000        0x0 usart.o
 .text          0x00000000        0x0 xstepperfull.o
 .bss           0x00000000        0x0 xstepperfull.o
 .text.StepperStepCCWFull
                0x00000000       0x42 xstepperfull.o
 .text.StepperStepCWFull
                0x00000000       0x42 xstepperfull.o
 .text          0x00000000        0x0 xstepperhalf.o
 .bss           0x00000000        0x0 xstepperhalf.o
 .text.StepperStepCCWHalf
                0x00000000       0x82 xstepperhalf.o
 .text.StepperStepCWHalf
                0x00000000       0x82 xstepperhalf.o
 .text          0x00000000        0x0 xsteppersingle.o
 .bss           0x00000000        0x0 xsteppersingle.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
LOAD motor.o
LOAD usart.o
LOAD xstepperfull.o
LOAD xstepperhalf.o
LOAD xsteppersingle.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libm.a
END GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x152
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.StepperInit
                0x0000006c        0xc motor.o
                0x0000006c                StepperInit
 .text.startup.main
                0x00000078       0x3c motor.o
                0x00000078                main
 .text.USARTInit
                0x000000b4        0xe usart.o
                0x000000b4                USARTInit
 .text.USARTReadChar
                0x000000c2        0x8 usart.o
                0x000000c2                USARTReadChar
 .text.StepperStepCCWSingle
                0x000000ca       0x42 xsteppersingle.o
                0x000000ca                StepperStepCCWSingle
 .text.StepperStepCWSingle
                0x0000010c       0x42 xsteppersingle.o
                0x0000010c                StepperStepCWSingle
                0x0000014e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000014e        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x0000014e                _exit
                0x0000014e                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000014e        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000152                _etext = .

.data           0x00800060        0x0 load address 0x00000152
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 motor.o
 .data          0x00800060        0x0 usart.o
 .data          0x00800060        0x0 xstepperfull.o
 .data          0x00800060        0x0 xstepperhalf.o
 .data          0x00800060        0x0 xsteppersingle.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000152                __data_load_start = LOADADDR (.data)
                0x00000152                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.1002/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f motor.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 usart.o
 .comment       0x00000000       0x30 xstepperfull.o
 .comment       0x00000000       0x30 xstepperhalf.o
 .comment       0x00000000       0x30 xsteppersingle.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xc8
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 motor.o
 .debug_aranges
                0x00000028       0x28 usart.o
 .debug_aranges
                0x00000050       0x28 xstepperfull.o
 .debug_aranges
                0x00000078       0x28 xstepperhalf.o
 .debug_aranges
                0x000000a0       0x28 xsteppersingle.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0xce5
 *(.debug_info)
 .debug_info    0x00000000      0x16f motor.o
 .debug_info    0x0000016f       0xc2 usart.o
 .debug_info    0x00000231      0x2ec xstepperfull.o
 .debug_info    0x0000051d      0x4dc xstepperhalf.o
 .debug_info    0x000009f9      0x2ec xsteppersingle.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x450
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xf7 motor.o
 .debug_abbrev  0x000000f7       0x7a usart.o
 .debug_abbrev  0x00000171       0xf5 xstepperfull.o
 .debug_abbrev  0x00000266       0xf5 xstepperhalf.o
 .debug_abbrev  0x0000035b       0xf5 xsteppersingle.o

.debug_line     0x00000000      0x7f3
 *(.debug_line)
 .debug_line    0x00000000      0x119 motor.o
 .debug_line    0x00000119       0xed usart.o
 .debug_line    0x00000206      0x1d9 xstepperfull.o
 .debug_line    0x000003df      0x239 xstepperhalf.o
 .debug_line    0x00000618      0x1db xsteppersingle.o

.debug_frame    0x00000000      0x104
 *(.debug_frame)
 .debug_frame   0x00000000       0x34 motor.o
 .debug_frame   0x00000034       0x34 usart.o
 .debug_frame   0x00000068       0x34 xstepperfull.o
 .debug_frame   0x0000009c       0x34 xstepperhalf.o
 .debug_frame   0x000000d0       0x34 xsteppersingle.o

.debug_str      0x00000000      0x1d8
 *(.debug_str)
 .debug_str     0x00000000       0xe5 motor.o
                                0x11e (size before relaxing)
 .debug_str     0x000000e5       0x18 usart.o
                                 0xea (size before relaxing)
 .debug_str     0x000000fd       0x8c xstepperfull.o
                                0x141 (size before relaxing)
 .debug_str     0x00000189       0x39 xstepperhalf.o
                                0x141 (size before relaxing)
 .debug_str     0x000001c2       0x16 xsteppersingle.o
                                0x147 (size before relaxing)

.debug_loc      0x00000000       0x44
 *(.debug_loc)
 .debug_loc     0x00000000       0x1e motor.o
 .debug_loc     0x0000001e       0x26 usart.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0x78
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x18 motor.o
 .debug_ranges  0x00000018       0x18 usart.o
 .debug_ranges  0x00000030       0x18 xstepperfull.o
 .debug_ranges  0x00000048       0x18 xstepperhalf.o
 .debug_ranges  0x00000060       0x18 xsteppersingle.o

.debug_macro
 *(.debug_macro)
OUTPUT(motor.elf elf32-avr)
LOAD linker stubs
